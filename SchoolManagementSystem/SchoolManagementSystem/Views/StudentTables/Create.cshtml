@model DatabaseAccess.StudentTable

@{
    ViewBag.Title = "Student Registration";
}



@using (Html.BeginForm("Create", "SectionTables", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="card" mb-4 shadow>
            <div class="card-header">
                Students Information
            </div>
            <div class="card-body">


                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">

                            @Html.LabelFor(model => model.SessionID, "Select Session", htmlAttributes: new { @class = "control-label " })

                            @Html.DropDownList("SessionID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SessionID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProgrameID, "Select Programe", htmlAttributes: new { @class = "control-label " })

                            @Html.DropDownList("ProgrameID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProgrameID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClassID, " Select current class ", htmlAttributes: new { @class = "control-label " })

                            @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })    
                            @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, " Student Name", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateofBirth, " Date Of Birth", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">

                            @Html.LabelFor(model => model.Gender, "Enter Gender", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactNo, "Contact No", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CNIC, "SSN", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nationality, "Enter Nationality", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Religion, "Religion", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TribeorCaste, "Caste", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.TribeorCaste, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TribeorCaste, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                           
                            @Html.LabelFor(model => model.PhotoFile, "Select photo", htmlAttributes: new { @class = "control-label " })
                            <span class="btn btn-default btn-file">
                                @Html.TextBoxFor(model => model.PhotoFile, new { type = "File" })
                                @Html.ValidationMessageFor(model => model.PhotoFile, "", new { @class = "text-danger" })
                            </span>



                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PreviousSchool, "Previous School", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.PreviousSchool, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PreviousSchool, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PreviousPercentage, "Percentage", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.PreviousPercentage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PreviousPercentage, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AddimissionDate, "Addimission Date", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.AddimissionDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddimissionDate, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
            </div>
        </div>

        <div class="card" mb-4 shadow>
            <div class="card-header">
                Parents Information
            </div>
            <div class="card-body">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FatherName, "Father Name", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress, "Email Address", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, "Permanent Address", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FathersGuardinasPostalAdress, "Postal Adress", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.FathersGuardinasPostalAdress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FathersGuardinasPostalAdress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FathersGuardinasOccupationofProffision, "Father Occupation", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.FathersGuardinasOccupationofProffision, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FathersGuardinasOccupationofProffision, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneOffice, "Office Phone No", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.PhoneOffice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneOffice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneResident, "Phone Resident", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.PhoneResident, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneResident, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FNIC, "Father SSN", htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.FNIC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FNIC, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" /> &nbsp; &nbsp;
                        @Html.ActionLink("Back To List", "Index", null, new { @class="btn btn-info"})
                    </div>
                </div>


            </div>
        </div>
    </div>
}
